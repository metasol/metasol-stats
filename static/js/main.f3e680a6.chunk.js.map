{"version":3,"sources":["components/ExternalLink/index.js","components/SocialLinks/index.js","components/SocialLinks/constants.js","utils/constants.js","components/Stats/index.js","utils/api.js","components/Homepage/index.js","App.js","reportWebVitals.js","index.js"],"names":["ExternalLink","target","href","rel","rest","onClick","event","ctrlKey","metaKey","ReactGA","outboundLink","label","console","debug","preventDefault","window","location","socialLinkItems","name","url","categories","isExternal","headerNav","filter","item","includes","Icon","size","className","iconContent","viewBox","xmlns","fillRule","clipRule","strokeLinejoin","strokeMiterlimit","d","cx","cy","r","fill","background","w","h","borderRadius","SocialLinks","spacing","map","config","Stats","useState","fetching","setFetching","statsSummary","setStatsSummary","walletsData","setWalletsData","transfersData","setTransfersData","fetchData","a","Promise","resolve","reject","axios","get","process","then","result","data","catch","error","summary","wallets","transfers","useEffect","totalWallets","totalTransfers","ResponsiveContainer","width","height","LineChart","XAxis","dataKey","YAxis","Label","value","position","angle","style","textAnchor","Tooltip","Legend","Line","type","activeDot","Homepage","id","marginTop","maxW","color","justifyContent","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","initialize","pageview","pathname","search"],"mappings":"mPAKO,SAASA,EAAT,GAKH,IAAD,IAJCC,cAID,MAJU,SAIV,EAHCC,EAGD,EAHCA,KAGD,IAFCC,WAED,MAFO,sBAEP,EADIC,EACJ,uCAiBC,OAAO,+BACHH,OAAQA,EACRE,IAAKA,EACLD,KAAMA,EACNG,QApBgB,SAACC,GAEF,WAAXL,GAAuBK,EAAMC,SAAWD,EAAME,QAC9CC,IAAQC,aAAa,CAAEC,MAAOT,IAAQ,WAClCU,QAAQC,MAAM,4BAA6BX,OAG/CI,EAAMQ,iBAENL,IAAQC,aAAa,CAAEC,MAAOT,IAAQ,WAClCa,OAAOC,SAASd,KAAOA,QAW3BE,IC3BZ,IAAMa,ECLkB,CACpB,CACIC,KAAM,UACNC,IAAK,+BACLC,WAAY,CAAC,UACbC,YAAY,GAEhB,CACIH,KAAM,UACNC,IAAK,uCACLC,WAAY,CAAC,UACbC,YAAY,GAEhB,CACIH,KAAM,OACNC,IAAK,8BACLC,WAAY,CAAC,UACbE,WAAW,EACXD,YAAY,IDbaE,QAAO,SAAAC,GAAI,OAAIA,EAAKJ,WAAWK,SAAS,aAEzE,SAASC,EAAT,GAA0C,IAA1BR,EAAyB,EAAzBA,KAAiBS,GAAQ,EAAnBC,UAAmB,EAARD,MACzBE,EAAc,KAClB,OAAQX,GACJ,IAAK,UACDW,EACI,qBACIC,QAAQ,cACRC,MAAM,6BACNC,SAAS,UACTC,SAAS,UACTC,eAAe,QACfC,iBAAiB,IANrB,SAQI,sBACIP,UAAU,cACVQ,EAAE,oTAId,MACJ,IAAK,UACDP,EACI,qBACIC,QAAQ,cACRC,MAAM,6BACNC,SAAS,UACTC,SAAS,UACTC,eAAe,QACfC,iBAAiB,IANrB,SAQI,sBACIP,UAAU,cACVQ,EAAE,uQAId,MACJ,IAAK,UACDP,EACI,sBAAKC,QAAQ,cAAcC,MAAM,6BAAjC,UACI,wBAAQM,GAAG,MAAMC,GAAG,MAAMC,EAAE,MAAMX,UAAU,gBAC5C,sBACIQ,EAAE,qYACFI,KAAK,YAIjB,MACJ,IAAK,OACDX,EACI,qBACIC,QAAQ,cACRC,MAAM,6BACNC,SAAS,UACTC,SAAS,UACTC,eAAe,QACfC,iBAAiB,IANrB,SAQI,sBACIP,UAAU,cACVQ,EAAE,gQAOtB,OACI,cAAC,IAAD,CAAKK,WAAW,OAAOC,EAAGf,GAAQ,OAAQgB,EAAGhB,GAAQ,OAAQiB,aAAa,OAA1E,SACI,cAAC,IAAD,CAAKhB,UAAU,aAAf,SAA6BC,MAoB1BgB,MAff,YAAkD,IAA3BlB,EAA0B,EAA1BA,KAAMmB,EAAoB,EAApBA,QAAY1C,EAAQ,kCAC7C,OACI,cAAC,IAAD,yBAAQ0C,QAASA,GAAW,IAAQ1C,GAApC,aACKa,EAAgB8B,KAAI,SAAAvB,GAAI,OACrB,cAACxB,EAAD,CACIE,KAAMsB,EAAKL,IADf,SAII,cAACO,EAAD,CAAMR,KAAMM,EAAKN,KAAMU,UAAU,aAAaD,KAAMA,GAAQ,MAFvDH,EAAKL,Y,kIEtF9B6B,mBCYe,SAASC,IAAS,IAAD,EACIC,oBAAS,GADb,mBACrBC,EADqB,KACXC,EADW,OAEYF,mBAAS,IAFrB,mBAErBG,EAFqB,KAEPC,EAFO,OAGUJ,mBAAS,IAHnB,mBAGrBK,EAHqB,KAGRC,EAHQ,OAIcN,mBAAS,IAJvB,mBAIrBO,EAJqB,KAINC,EAJM,KAMtBC,EAAS,uCAAG,8BAAAC,EAAA,sECfX,IAAIC,SAAQ,SAACC,EAASC,GACzBC,IAAMC,IAAN,UFFkBC,0BEElB,eAIKC,MAAK,SAACC,GACHN,EAAQM,EAAOC,SAElBC,OAAM,SAACC,GACJR,EAAOQ,SDMD,OACRC,EADQ,OAERH,EAAOG,EAAQJ,OAAOC,KAC5Bf,EAAgBe,GAChBb,EAAea,EAAKI,SACpBf,EAAiBW,EAAKK,WACtBtB,GAAY,GANE,2CAAH,qDAaf,OAJAuB,qBAAU,WACNhB,MACD,IAGC,gCACI,uBAAM/B,UAAU,QAAhB,UACI,sBAAKA,UAAU,OAAf,UACI,wDACA,6BACMuB,EAEE,qCADA,+BAAOE,EAAauB,oBAKhC,sBAAKhD,UAAU,iBAAf,UACI,qDACA,6BACMuB,EAEE,qCADA,+BAAOE,EAAawB,yBAOpC,qBAAKjD,UAAU,cAAf,0CAIA,cAACkD,EAAA,EAAD,CACIC,MAAM,MACNC,OAAQ,IAFZ,SAII,eAACC,EAAA,EAAD,CAAWZ,KAAMZ,EAAjB,UACI,cAACyB,EAAA,EAAD,CAAOC,QAAQ,QACf,cAACC,EAAA,EAAD,CAAOD,QAAQ,YAAf,SACI,cAACE,EAAA,EAAD,CACIC,MAAM,YACNC,SAAS,aACTC,OAAQ,GACRC,MAAO,CAAEC,WAAY,cAG7B,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CACIC,KAAK,WACLX,QAAQ,YACRY,UAAW,CAAExD,EAAG,UAK5B,qBAAKX,UAAU,cAAf,wCAIA,cAACkD,EAAA,EAAD,CACIC,MAAM,MACNC,OAAQ,IAFZ,SAII,eAACC,EAAA,EAAD,CAAWZ,KAAMd,EAAjB,UACI,cAAC2B,EAAA,EAAD,CAAOC,QAAQ,QACf,cAACC,EAAA,EAAD,CAAOD,QAAQ,UAAf,SACI,cAACE,EAAA,EAAD,CACIC,MAAM,UACNC,SAAS,aACTC,OAAQ,GACRC,MAAO,CAAEC,WAAY,cAG7B,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CACIC,KAAK,WACLX,QAAQ,UACRY,UAAW,CAAExD,EAAG,aEnGzB,SAASyD,IACpB,OACI,gCAEI,qBAAKpE,UAAU,4CAA4CqE,GAAG,UAA9D,SACI,sBAAKrE,UAAU,YAAf,UACI,qBAAKA,UAAU,2BAEf,qBAAKqE,GAAG,mBAAR,SACI,oBAAIrE,UAAU,kCAAd,SACI,oBAAIA,UAAU,WAAd,SACI,cAAC5B,EAAD,CACI4B,UAAU,6BACV1B,KAAK,sBACLuF,MAAO,CAAES,UAAW,OAHxB,8BAcpB,wBAAQtE,UAAU,WAAWqE,GAAG,WAAhC,SACI,qBAAKrE,UAAU,YAAf,SACI,cAACqB,EAAD,QAKR,wBAAQrB,UAAU,OAAO6D,MAAO,CAAEhD,WAAY,WAA9C,SACI,qBAAKb,UAAU,YAAf,SACI,eAAC,IAAD,CAAKuE,KAAK,cAAcC,MAAM,QAAQhE,EAAE,OAAOiE,eAAe,gBAA9D,UACI,qBAAKzE,UAAU,6BAAf,2CAGA,cAAC,EAAD,cC1CT,SAAS0E,IACpB,OACI,8BACI,cAACN,EAAD,MCNZ,IAYeO,EAZS,SAAAC,GAChBA,GAAeA,aAAuBC,UACtC,8BAAqBtC,MAAK,YAAkD,IAA/CuC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzDJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCApBxD,mBAEA+D,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAACX,EAAD,MAEJY,SAASC,eAAe,SAG5B1G,IAAQ2G,WACJlD,kBAGJzD,IAAQ4G,SACJtG,OAAOC,SAASsG,SAAWvG,OAAOC,SAASuG,QAG/ChB,M","file":"static/js/main.f3e680a6.chunk.js","sourcesContent":["import ReactGA from 'react-ga';\n\n/**\n * Outbound link that handles firing google analytics events\n */\nexport function ExternalLink({\n    target = '_blank',\n    href,\n    rel = 'noopener noreferrer',\n    ...rest\n}) {\n    const handleClick = (event) => {\n        // don't prevent default, don't redirect if it's a new tab\n        if (target === '_blank' || event.ctrlKey || event.metaKey) {\n            ReactGA.outboundLink({ label: href }, () => {\n                console.debug('Fired outbound link event', href)\n            })\n        } else {\n            event.preventDefault()\n            // send a ReactGA event and then trigger a location change\n            ReactGA.outboundLink({ label: href }, () => {\n                window.location.href = href\n            })\n        }\n    }\n\n    // eslint-disable-next-line\n    return <a\n        target={target}\n        rel={rel}\n        href={href}\n        onClick={handleClick}\n        {...rest}\n    ></a>\n}\n","import React from 'react';\nimport { HStack, Box } from '@chakra-ui/react';\nimport { navItems } from './constants';\nimport { ExternalLink } from '../ExternalLink';\n\nconst socialLinkItems = navItems.filter(item => item.categories.includes('social'));\n\nfunction Icon({ name, className, size }) {\n    let iconContent = null;\n    switch (name) {\n        case 'Twitter':\n            iconContent = (\n                <svg\n                    viewBox=\"0 0 512 512\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    fillRule=\"evenodd\"\n                    clipRule=\"evenodd\"\n                    strokeLinejoin=\"round\"\n                    strokeMiterlimit=\"2\"\n                >\n                    <path\n                        className=\"metasolFill\"\n                        d=\"M256 0a256 256 0 110 512 256 256 0 010-512zm-45 392c113 0 175-94 175-175v-8c12-9 22-20 31-32-11 5-23 8-36 10 13-8 23-20 27-34-11 7-25 12-39 15a62 62 0 00-105 56c-51-3-96-27-126-65a62 62 0 0019 83c-10-1-20-3-28-8v1c0 30 21 54 49 60a61 61 0 01-27 1c7 25 30 42 57 43a124 124 0 01-91 25c27 18 59 28 94 28z\"\n                    />\n                </svg>\n            );\n            break;\n        case 'Youtube':\n            iconContent = (\n                <svg\n                    viewBox=\"0 0 512 512\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    fillRule=\"evenodd\"\n                    clipRule=\"evenodd\"\n                    strokeLinejoin=\"round\"\n                    strokeMiterlimit=\"2\"\n                >\n                    <path\n                        className=\"metasolFill\"\n                        d=\"M256 0a256 256 0 110 512 256 256 0 010-512zm153 179c-3-14-14-25-28-28-25-7-125-7-125-7s-100 0-125 7c-14 3-25 14-28 28-7 25-7 77-7 77s0 52 7 77c3 14 14 25 28 28 25 7 125 7 125 7s100 0 125-7c14-3 25-14 28-28 7-25 7-77 7-77s0-52-7-77zM224 304v-96l83 48-83 48z\"\n                    />\n                </svg>\n            );\n            break;\n        case 'Discord':\n            iconContent = (\n                <svg viewBox=\"0 0 512 512\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <circle cx=\"256\" cy=\"256\" r=\"256\" className=\"metasolFill\" />\n                    <path\n                        d=\"M372 169s-33-26-72-29l-4 7c36 8 52 21 69 36-29-15-58-29-109-29s-80 14-109 29c17-15 37-29 69-36l-3-7c-42 3-73 29-73 29s-37 54-44 160c38 43 95 43 95 43l12-16c-21-7-43-19-63-42 23 18 59 37 116 37s93-19 117-37c-20 23-43 35-63 42l12 16s57 0 94-43c-6-106-44-160-44-160zM209 300c-14 0-26-13-26-29s12-30 26-30 25 13 25 30-11 29-25 29zm94 0c-14 0-25-13-25-29s11-30 25-30 26 13 26 30-12 29-26 29z\"\n                        fill=\"#FFF\"\n                    />\n                </svg>\n            );\n            break;\n        case 'Blog':\n            iconContent = (\n                <svg\n                    viewBox=\"0 0 512 512\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    fillRule=\"evenodd\"\n                    clipRule=\"evenodd\"\n                    strokeLinejoin=\"round\"\n                    strokeMiterlimit=\"2\"\n                >\n                    <path\n                        className=\"metasolFill\"\n                        d=\"M511 256a255 255 0 10-255 255c141 0 255-114 255-255zm-229 0c0 63-51 114-113 114S56 319 56 256s51-114 113-114 113 51 113 114zm123 0c0 59-25 107-56 107s-56-48-56-107 25-107 56-107 56 48 56 107zm51 0c0 53-9 96-20 96s-20-43-20-96 9-96 20-96 20 43 20 96z\"\n                    />\n                </svg>\n            );\n            break;\n        default:\n    }\n    return (\n        <Box background=\"#fff\" w={size || '25px'} h={size || '25px'} borderRadius=\"100%\">\n            <Box className=\"socialIcon\">{iconContent}</Box>\n        </Box>\n    );\n}\n\nfunction SocialLinks({ size, spacing, ...rest }) {\n    return (\n        <HStack spacing={spacing || 10} {...rest}>\n            {socialLinkItems.map(item => (\n                <ExternalLink\n                    href={item.url}\n                    key={item.url}\n                >\n                    <Icon name={item.name} className=\"socialIcon\" size={size || 30} />\n                </ExternalLink>\n            ))}\n        </HStack>\n    );\n}\n\nexport default SocialLinks;\n","export const navItems = [\n    {\n        name: 'Twitter',\n        url: 'https://twitter.com/sol_meta',\n        categories: ['social'],\n        isExternal: true,\n    },\n    {\n        name: 'Discord',\n        url: 'https://discord.gg/invite/zyZuQVHKgA',\n        categories: ['social'],\n        isExternal: true,\n    },\n    {\n        name: 'Blog',\n        url: 'https://metasol.medium.com/',\n        categories: ['social'],\n        headerNav: true,\n        isExternal: true,\n    },\n];\n","import { config } from 'dotenv';\nconfig();\n\nexport const relayerUrl = process.env.REACT_APP_RELAYER_URL;\n","import { React, useState, useEffect } from 'react'\nimport {\n    Tooltip,\n    Line,\n    LineChart,\n    XAxis,\n    YAxis,\n    Legend,\n    ResponsiveContainer,\n    Label,\n} from 'recharts';\nimport { getStatSummary } from '../../utils/api';\n\nexport default function Stats() {\n    const [fetching, setFetching] = useState(true);\n    const [statsSummary, setStatsSummary] = useState({});\n    const [walletsData, setWalletsData] = useState([]);\n    const [transfersData, setTransfersData] = useState([]);\n\n    const fetchData = async () => {\n        const summary = await getStatSummary();\n        const data = summary.result.data;\n        setStatsSummary(data);\n        setWalletsData(data.wallets);\n        setTransfersData(data.transfers);\n        setFetching(false);\n    }\n\n    useEffect(() => {\n        fetchData();\n    }, [])\n\n    return (\n        <div>\n            <main className=\"stats\">\n                <div className=\"item\">\n                    <h3>Unique Wallets Created</h3>\n                    <h1>\n                        {!fetching ?\n                            <span>{statsSummary.totalWallets}</span> :\n                            <span>-</span>\n                        }\n                    </h1>\n                </div>\n                <div className=\"item end-right\">\n                    <h3>Total SPL Transfers</h3>\n                    <h1>\n                        {!fetching ?\n                            <span>{statsSummary.totalTransfers}</span> :\n                            <span>-</span>\n                        }\n                    </h1>\n                </div>\n            </main>\n\n            <div className=\"graph-title\">\n                Cumulative MetaSPL transfers\n            </div>\n\n            <ResponsiveContainer\n                width=\"95%\"\n                height={300}\n            >\n                <LineChart data={transfersData}>\n                    <XAxis dataKey=\"day\" />\n                    <YAxis dataKey=\"transfers\" >\n                        <Label\n                            value=\"transfers\"\n                            position=\"insideLeft\"\n                            angle={-90}\n                            style={{ textAnchor: 'middle' }}\n                        />\n                    </YAxis>\n                    <Tooltip />\n                    <Legend />\n                    <Line\n                        type=\"monotone\"\n                        dataKey=\"transfers\"\n                        activeDot={{ r: 8 }}\n                    />\n                </LineChart>\n            </ResponsiveContainer>\n\n            <div className=\"graph-title\">\n                Cumulative wallets created\n            </div>\n\n            <ResponsiveContainer\n                width=\"95%\"\n                height={300}\n            >\n                <LineChart data={walletsData}>\n                    <XAxis dataKey=\"day\" />\n                    <YAxis dataKey=\"wallets\">\n                        <Label\n                            value=\"wallets\"\n                            position=\"insideLeft\"\n                            angle={-90}\n                            style={{ textAnchor: 'middle' }}\n                        />\n                    </YAxis>\n                    <Tooltip />\n                    <Legend />\n                    <Line\n                        type=\"monotone\"\n                        dataKey=\"wallets\"\n                        activeDot={{ r: 8 }}\n                    />\n                </LineChart>\n            </ResponsiveContainer>\n        </div >\n    )\n}","import axios from \"axios\";\nimport { relayerUrl } from \"./constants\";\n\nexport const getStatSummary = () => {\n    return new Promise((resolve, reject) => {\n        axios.get\n            (\n                `${relayerUrl}/get-stats`,\n            )\n            .then((result) => {\n                resolve(result.data)\n            })\n            .catch((error) => {\n                reject(error);\n            })\n    });\n};\n","import React from 'react';\nimport '../../scss/styles.scss';\nimport { Box } from '@chakra-ui/layout';\nimport SocialLinks from '../SocialLinks';\nimport { ExternalLink } from '../ExternalLink';\nimport Stats from '../Stats';\n\nexport default function Homepage() {\n    return (\n        <div>\n            {/* Navigation*/}\n            <nav className=\"navbar navbar-expand-lg navbar-light py-3\" id=\"mainNav\">\n                <div className=\"container\">\n                    <div className=\"js-scroll-trigger logo\"></div>\n\n                    <div id=\"navbarResponsive\">\n                        <ul className=\"navbar-nav ml-auto my-2 my-lg-0\">\n                            <li className=\"nav-item\">\n                                <ExternalLink\n                                    className=\"nav-link js-scroll-trigger\"\n                                    href=\"https://metasol.xyz\"\n                                    style={{ marginTop: \"6px\" }}\n                                >\n                                    ABOUT\n                                </ExternalLink>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </nav>\n\n            {/* Main*/}\n            <header className=\"homepage\" id=\"page-top\">\n                <div className=\"container\">\n                    <Stats></Stats>\n                </div>\n            </header>\n\n            {/* Footer*/}\n            <footer className=\"py-5\" style={{ background: \"#ffffff\" }}>\n                <div className=\"container\">\n                    <Box maxW=\"containerLg\" color=\"white\" d=\"flex\" justifyContent=\"space-between\">\n                        <div className=\"copyright small text-muted\">\n                            Copyright © 2021 - MetaSol\n                        </div>\n                        <SocialLinks />\n                    </Box>\n                </div>\n            </footer>\n        </div >\n    );\n}\n","import React from 'react';\nimport Homepage from './components/Homepage';\n\nexport default function App() {\n    return (\n        <div>\n            <Homepage />\n        </div>\n    );\n}\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport ReactGA from 'react-ga';\nimport { config } from 'dotenv';\nimport reportWebVitals from './reportWebVitals';\n\nconfig();\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\nReactGA.initialize(\n    process.env.REACT_APP_GOOGLE_ANALYTICS_ID\n);\n\nReactGA.pageview(\n    window.location.pathname + window.location.search\n);\n\nreportWebVitals();\n"],"sourceRoot":""}